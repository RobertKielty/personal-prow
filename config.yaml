prowjob_namespace: default
pod_namespace: test-pods

# TODO We can use ytt here to select the correct domain name, utility_images, gcs bucket name etc.
plank:
  allow_cancellations: true # whether to delete ProwJobs' pod (true) or not (false) when new instances are triggered for the same PR
  # used to link to job results for decorated jobs (with pod utilities)
  job_url_prefix_config: 
    '*' : http://deck.default.svc.cluster.local/view/gcs'
  # used to link to job results for non decorated jobs (without pod utilities)
  job_url_template: 'https://deck.default.svc.cluster.local/view/gcs/robk-personal-prow-artefacts/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](https://deck.default.svc.cluster.local/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  default_decoration_config:
    timeout: 4h
    grace_period: 15s
    utility_images: # pull specs for container images used to constsruct job pods using kubectl get pod -lapp=plank -o jsonpath='{.items[0].spec.containers[0].image}' | cut -d: -f2]]}
      clonerefs: gcr.io/k8s-prow/clonerefs:v20191108-08fbf64ac
      initupload: gcr.io/k8s-prow/initupload:v20191108-08fbf64ac
      entrypoint: gcr.io/k8s-prow/entrypoint:v20191108-08fbf64ac
      sidecar: gcr.io/k8s-prow/sidecar:v20191108-08fbf64ac
    gcs_configuration: # configuration for uploading job results to GCS
      bucket: robk-personal-prow-artifacts
      path_strategy: explicit # or `legacy`, `single`
      default_org: ROKITDSOrg # should not need this if `strategy` is set to explicit
      default_repo: kubernetes # should not need this if `strategy` is set to explicit
    gcs_credentials_secret: service-account.json # the name of the secret that stores the GCP service account credential JSON file, it expects the secret's key to be `service-account.json`
    ssh_key_secrets:
      - ssh-secret # name of the secret that stores the bot's ssh keys for GitHub, doesn't matter what the key of the map is and it will just uses the values

periodics:
postsubmits:
  RokiTDSOrg/kubernetes:
  - name: test-postsubmit
    decorate: true
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
presubmits:
  RokiTDSOrg/kubernetes:
  - name: pull-kubernetes-bazel
    decorate: true
    context: Jenkins Bazel Build
    always_run: true
    rerun_command: "@k8s-bot bazel test this"
    trigger: "@k8s-bot (bazel )?test this"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:0.11
        args:
        - "--pull=$(PULL_REFS)"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--git-cache=/root/.cache/git"
        - "--clean"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-org-test-all
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: launcher.gcr.io/google/bazel:0.29.1
        command:
        - bazel
        args:
        - test
        - --config=ci
        - //...
    annotations:
      testgrid-num-columns-recent: '30'
      testgrid-create-test-group: 'true'
  - name: pull-org-verify-all
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: launcher.gcr.io/google/bazel:0.29.1
        command:
        - ./hack/verify-all.sh
    annotations:
      testgrid-num-columns-recent: '30'
      testgrid-create-test-group: 'true'


tide:
  merge_method:
    kubeflow/community: squash

  target_url: https://deck.default.svc.cluster.local/tide.html

  queries:
  - repos:
    - ROKItds/kubernetes

  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true
    # Treat unknown contexts as optional
    skip-unknown-contexts: true

