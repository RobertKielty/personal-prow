#@ load("@ytt:data", "data")

#!rpkref Getting started TODO provide full ref
plank:
  #! used to link to job results for non decorated jobs (without pod utilities)
  job_url_template: 'https://deck.default.svc.cluster.local/view/gcs/robk-personal-prow-artefacts/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](https://deck.default.svc.cluster.local/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  allow_cancellations: true #! whether to delete ProwJobs' pod (true) or not (false) when new instances are triggered for the same PR
#! used to link to job results for decorated jobs (with pod utilities)
  job_url_prefix_config:
    '*' : http://deck.default.svc.cluster.local/view/gcs'
  default_decoration_config:
    timeout: 4h
    grace_period: 15s
    utility_images: #! pull specs for container images used to construct job pods
      clonerefs:  #@ "gcr.io/k8s-prow/clonerefs:" + data.values.prowimage
      initupload: #@ "gcr.io/k8s-prow/initupload:" + data.values.prowimage
      entrypoint: #@ "gcr.io/k8s-prow/entrypoint:" + data.values.prowimage
      sidecar:    #@ "gcr.io/k8s-prow/sidecar:" + data.values.prowimage
    gcs_configuration: #! configuration for uploading job results to GCS
      bucket: robk-personal-prow-artifacts
      path_strategy: explicit #! or `legacy`, `single`
      default_org: ROKITDSOrg #! should not need this if `strategy` is set to explicit
      default_repo: kubernetes #! should not need this if `strategy` is set to explicit
    gcs_credentials_secret: service-account.json #! the name of the secret that stores the GCP service account credential JSON file, it expects the secret's key to be `service-account.json`
    ssh_key_secrets:
      - ssh-secret #! name of the secret that stores the bot's ssh keys for GitHub, doesn't matter what the key of the map is and it will just uses the values

periodics:
postsubmits:
  RokiTDSOrg/kubernetes:
  - name: test-postsubmit
    decorate: true
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
tide:
  merge_method:
    kubeflow/community: squash
  target_url: https://deck.default.svc.cluster.local/tide.html
  queries:
  - repos:
    - ROKItds/kubernetes
  context_options:
    #! Use branch protection options to define required and optional contexts
    from-branch-protection: true
    #! Treat unknown contexts as optional
    skip-unknown-contexts: true

